services:
  kafka:
    image: apache/kafka:4.0.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      - PATH=/opt/kafka/bin:$PATH
      # KRaft settings
      - KAFKA_NODE_ID=0
      - KAFKA_PROCESS_ROLES=controller,broker
      - KAFKA_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Additional settings
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_MIN_INSYNC_REPLICAS=1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.2
    hostname: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

  # Flink components
  jobmanager:
    build:
      context: ./flink-sql/docker/sql-client
    hostname: jobmanager
    ports:
      - "8082:8081"  # Already set correctly - external 8082, internal 8081
    command: jobmanager
    environment:
      - FLINK_JOBMANAGER_HOST=jobmanager
      - FLINK_JOBMANAGER_PORT=8081
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.flamegraph.enabled: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/overview"]
      interval: 5s
      timeout: 10s
      retries: 10

  taskmanager:
    build:
      context: ./flink-sql/docker/sql-client
    hostname: taskmanager
    depends_on:
      jobmanager:
        condition: service_healthy
    command: taskmanager
    deploy:
      replicas: 1
    environment:
      - FLINK_JOBMANAGER_HOST=jobmanager
      - FLINK_JOBMANAGER_PORT=8081
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 16

#  sql-client:
#    build:
#      context: ./flink-sql/docker/sql-client
#    command:
#      - bin/sql-client.sh
#    depends_on:
#      jobmanager:
#        condition: service_healthy
#      kafka:
#        condition: service_healthy
#      schema-registry:
#        condition: service_healthy
#    volumes:
#      - ./flink-sql/sql:/opt/sql
#    environment:
#      - FLINK_JOBMANAGER_HOST=jobmanager
#      - FLINK_JOBMANAGER_PORT=8081
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
#      - |
#        - FLINK_PROPERTIES=
#          jobmanager.rpc.address: jobmanager
#          rest.address: jobmanager
